# Copyright 2024 granz.fisherman@gmail.com
# https://opensource.org/license/mit

cmake_minimum_required (VERSION 3.16)

if (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_BUILD_TYPE "RelWithDebinfo" CACHE STRING "Default build type")
endif ()

project(fqhex)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# Performance test executable
add_executable(fqhex-perf-test-generic perf/fqhex_perf_test.cpp)
target_compile_features(fqhex-perf-test-generic PUBLIC cxx_std_20)
if (UNIX)
  target_compile_options(fqhex-perf-test-generic PRIVATE -Wall)
endif()

add_executable(fqhex-perf-test-ssse3 perf/fqhex_perf_test.cpp)
target_compile_features(fqhex-perf-test-ssse3 PUBLIC cxx_std_20)
target_compile_options(fqhex-perf-test-ssse3 PRIVATE -DHAVE_SSSE3=1)
if (UNIX)
  target_compile_options(fqhex-perf-test-ssse3 PRIVATE -Wall -mssse3)
endif()

add_executable(fqhex-perf-test-avx2 perf/fqhex_perf_test.cpp)
target_compile_features(fqhex-perf-test-avx2 PUBLIC cxx_std_20)
target_compile_options(fqhex-perf-test-avx2 PRIVATE -DHAVE_AVX2=1)
if (UNIX)
  target_compile_options(fqhex-perf-test-avx2 PRIVATE -Wall -mavx2)
endif()

# Unit test executable (Generic)
add_executable(fqhex-test-generic-char test/fqhex_test.cpp)
target_compile_features(fqhex-test-generic-char PUBLIC cxx_std_20)
if (UNIX)
  target_compile_options(fqhex-test-generic-char PRIVATE -Wall -D_GLIBCXX_DEBUG)
endif()

add_executable(fqhex-test-generic-wchar test/fqhex_test.cpp)
target_compile_features(fqhex-test-generic-wchar PUBLIC cxx_std_20)
target_compile_options(fqhex-test-generic-wchar PRIVATE -DCHAR_MODE=1632)
if (UNIX)
  target_compile_options(fqhex-test-generic-wchar PRIVATE -Wall -D_GLIBCXX_DEBUG)
endif()

add_executable(fqhex-test-generic-char8 test/fqhex_test.cpp)
target_compile_features(fqhex-test-generic-char8 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-generic-char8 PRIVATE -DCHAR_MODE=8)
if (UNIX)
  target_compile_options(fqhex-test-generic-char8 PRIVATE -Wall -D_GLIBCXX_DEBUG)
endif()

add_executable(fqhex-test-generic-char16 test/fqhex_test.cpp)
target_compile_features(fqhex-test-generic-char16 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-generic-char16 PRIVATE -DCHAR_MODE=16)
if (UNIX)
  target_compile_options(fqhex-test-generic-char16 PRIVATE -Wall -D_GLIBCXX_DEBUG)
endif()

add_executable(fqhex-test-generic-char32 test/fqhex_test.cpp)
target_compile_features(fqhex-test-generic-char32 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-generic-char32 PRIVATE -DCHAR_MODE=32)
if (UNIX)
  target_compile_options(fqhex-test-generic-char32 PRIVATE -Wall -D_GLIBCXX_DEBUG)
endif()

# Unit test executable (SSSE3)
add_executable(fqhex-test-ssse3-char test/fqhex_test.cpp)
target_compile_features(fqhex-test-ssse3-char PUBLIC cxx_std_20)
target_compile_options(fqhex-test-ssse3-char PRIVATE -DHAVE_SSSE3=8)
if (UNIX)
  target_compile_options(fqhex-test-ssse3-char PRIVATE -Wall -D_GLIBCXX_DEBUG -mssse3)
endif()

add_executable(fqhex-test-ssse3-wchar test/fqhex_test.cpp)
target_compile_features(fqhex-test-ssse3-wchar PUBLIC cxx_std_20)
target_compile_options(fqhex-test-ssse3-wchar PRIVATE -DCHAR_MODE=1632 -DHAVE_SSSE3=1632)
if (UNIX)
  target_compile_options(fqhex-test-ssse3-wchar PRIVATE -Wall -D_GLIBCXX_DEBUG -mssse3)
endif()

add_executable(fqhex-test-ssse3-char8 test/fqhex_test.cpp)
target_compile_features(fqhex-test-ssse3-char8 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-ssse3-char8 PRIVATE -DCHAR_MODE=8 -DHAVE_SSSE3=8)
if (UNIX)
  target_compile_options(fqhex-test-ssse3-char8 PRIVATE -Wall -D_GLIBCXX_DEBUG -mssse3)
endif()

add_executable(fqhex-test-ssse3-char16 test/fqhex_test.cpp)
target_compile_features(fqhex-test-ssse3-char16 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-ssse3-char16 PRIVATE -DCHAR_MODE=16 -DHAVE_SSSE3=16)
if (UNIX)
  target_compile_options(fqhex-test-ssse3-char16 PRIVATE -Wall -D_GLIBCXX_DEBUG -mssse3)
endif()

add_executable(fqhex-test-ssse3-char32 test/fqhex_test.cpp)
target_compile_features(fqhex-test-ssse3-char32 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-ssse3-char32 PRIVATE -DCHAR_MODE=32 -DHAVE_SSSE3=32)
if (UNIX)
  target_compile_options(fqhex-test-ssse3-char32 PRIVATE -Wall -D_GLIBCXX_DEBUG -mssse3)
endif()

# Unit test executable (AVX2)
add_executable(fqhex-test-avx2-char test/fqhex_test.cpp)
target_compile_features(fqhex-test-avx2-char PUBLIC cxx_std_20)
target_compile_options(fqhex-test-avx2-char PRIVATE -DHAVE_AVX2=8)
if (UNIX)
  target_compile_options(fqhex-test-avx2-char PRIVATE -Wall -D_GLIBCXX_DEBUG -mavx2)
endif()

add_executable(fqhex-test-avx2-wchar test/fqhex_test.cpp)
target_compile_features(fqhex-test-avx2-wchar PUBLIC cxx_std_20)
target_compile_options(fqhex-test-avx2-wchar PRIVATE -DCHAR_MODE=1632 -DHAVE_AVX2=1632)
if (UNIX)
  target_compile_options(fqhex-test-avx2-wchar PRIVATE -Wall -D_GLIBCXX_DEBUG -mavx2)
endif()

add_executable(fqhex-test-avx2-char8 test/fqhex_test.cpp)
target_compile_features(fqhex-test-avx2-char8 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-avx2-char8 PRIVATE -DCHAR_MODE=8 -DHAVE_AVX2=8)
if (UNIX)
  target_compile_options(fqhex-test-avx2-char8 PRIVATE -Wall -D_GLIBCXX_DEBUG -mavx2)
endif()

add_executable(fqhex-test-avx2-char16 test/fqhex_test.cpp)
target_compile_features(fqhex-test-avx2-char16 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-avx2-char16 PRIVATE -DCHAR_MODE=16 -DHAVE_AVX2=16)
if (UNIX)
  target_compile_options(fqhex-test-avx2-char16 PRIVATE -Wall -D_GLIBCXX_DEBUG -mavx2)
endif()

add_executable(fqhex-test-avx2-char32 test/fqhex_test.cpp)
target_compile_features(fqhex-test-avx2-char32 PUBLIC cxx_std_20)
target_compile_options(fqhex-test-avx2-char32 PRIVATE -DCHAR_MODE=32 -DHAVE_AVX2=32)
if (UNIX)
  target_compile_options(fqhex-test-avx2-char32 PRIVATE -Wall -D_GLIBCXX_DEBUG -mavx2)
endif()

# Test settings
enable_testing()
add_test(NAME generic-char COMMAND fqhex-test-generic-char)
add_test(NAME generic-wchar_t COMMAND fqhex-test-generic-wchar)
add_test(NAME generic-char8_t COMMAND fqhex-test-generic-char8)
add_test(NAME generic-char16_t COMMAND fqhex-test-generic-char16)
add_test(NAME generic-char32_t COMMAND fqhex-test-generic-char32)
add_test(NAME ssse3-char COMMAND fqhex-test-ssse3-char)
add_test(NAME ssse3-wchar_t COMMAND fqhex-test-ssse3-wchar)
add_test(NAME ssse3-char8_t COMMAND fqhex-test-ssse3-char8)
add_test(NAME ssse3-char16_t COMMAND fqhex-test-ssse3-char16)
add_test(NAME ssse3-char32_t COMMAND fqhex-test-ssse3-char32)
add_test(NAME avx2-char COMMAND fqhex-test-avx2-char)
add_test(NAME avx2-wchar_t COMMAND fqhex-test-avx2-wchar)
add_test(NAME avx2-char8_t COMMAND fqhex-test-avx2-char8)
add_test(NAME avx2-char16_t COMMAND fqhex-test-avx2-char16)
add_test(NAME avx2-char32_t COMMAND fqhex-test-avx2-char32)
